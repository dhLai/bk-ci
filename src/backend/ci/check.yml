stages:
  - stage:
      - job:
          displayName: "代码检查"
          type: "vmBuild"
          pool:
            container: "mirrors.tencent.com/ci/tlinux_ci:0.2.1.8"
            credential:
              credentialId: ""
            env: {}
            type: "DockerOnVm"
          steps:
            - taskType: 'syncLocalCode@latest'
              displayName: 同步代码到云端
            - taskType: bash@latest
              displayName: "kotlin代码规范检查"
              inputs:
                scriptType: "SHELL"
                content: "# 您可以通过setEnv函数设置插件间传递的参数\n# setEnv \"FILENAME\" \"package.zip\"\
            \n# 然后在后续的插件的表单中使用${FILENAME}引用这个变量\n\n# 您可以在质量红线中创建自定义指标，然后通过setGateValue函\
            数设置指标值\n# setGateValue \"CodeCoverage\" $myValue\n# 然后在质量红线选择相应指标和阈值。若\
            不满足，流水线在执行时将会被卡住\n\n# cd ${WORKSPACE} 可进入当前工作空间目录\n\ncd src/backend/ci\n\
            wget http://mirrors.tencent.com/repository/generic/public/ktlint -O ktlint\n\
            java -jar ktlint \"**/src/**/*.kt\" --reporter=plain,output=report/ktlint-report.txt\n\
            \n"
                continueOnError: true
              condition: null
            - taskType: marketBuild@latest
              displayName: "腾讯代码分析(最新)"
              inputs:
                atomCode: "CodeccCheckAtomDebug"
                name: "腾讯代码分析(最新)"
                version: "4.*"
                data:
                  input:
                    script: "# Coverity/Klocwork将通过调用编译脚本来编译您的代码，以追踪深层次的缺陷\n# 请使用依赖的构建工具\
                如maven/cmake等写一个编译脚本build.sh\n# 确保build.sh能够编译代码\n# cd path/to/build.sh\n\
                # sh build.sh"
                    codeCCTaskName: ""
                    codeCCTaskCnName: ""
                    codeCCTaskId: ""
                    checkerSetType: "normal"
                    languages:
                      - "JAVA"
                      - "JS"
                      - "GOLANG"
                      - "KOTLIN"
                    asynchronous: ""
                    scanType: ""
                    path:
                      - "src/backend/ci"
                    openScanPrj: false
                    pyVersion: "py3"
                    eslintRc: ""
                    phpcsStandard: ""
                    goPath: "src/agent/src"
                    projectBuildType: ""
                    projectBuildCommand: ""
                    ccnThreshold: ""
                    needCodeContent: ""
                    coverityToolSetId: ""
                    klocworkToolSetId: ""
                    cpplintToolSetId: ""
                    eslintToolSetId: ""
                    pylintToolSetId: ""
                    gometalinterToolSetId: ""
                    checkStyleToolSetId: ""
                    styleCopToolSetId: ""
                    detektToolSetId: ""
                    phpcsToolSetId: ""
                    sensitiveToolSetId: ""
                    occheckToolSetId: ""
                    ripsToolSetId: ""
                    gociLintToolSetId: ""
                    woodpeckerToolSetId: ""
                    horuspyToolSetId: ""
                    pinpointToolSetId: ""
                    _CODECC_FILTER_TOOLS: ""
                    pipeline.start.channel: ""
                    languageRuleSetMap:
                      JAVA_RULE:
                        - "bk_ci_java_sec"
                      KOTLIN_RULE:
                        - "bk_ci_kotlin"
                      JS_RULE:
                        - "codecc_fast_js"
                        - "js_eslint_sec"
                      RUBY_RULE: []
                      GOLANG_RULE:
                        - "bk_ci_go_sec"
                        - "codecc_default_go"
                    rtxReceiverType: "4"
                    rtxReceiverList: []
                    emailReceiverType: "4"
                    emailReceiverList: []
                    emailCCReceiverList: []
                    reportStatus: ""
                    reportDate: []
                    reportTime: ""
                    instantReportStatus: "2"
                    reportTools: []
                    botWebhookUrl: ""
                    botRemindSeverity: "7"
                    botRemaindTools: []
                    botRemindRange: "1"
                    toolScanType: "0"
                    newDefectJudgeFromDate: "2021-03-01"
                    newDefectJudgeBy: ""
                    transferAuthorList: []
                    mrCommentEnable: true
                    pathList: ""
                    whileScanPaths: ""
                    pathType: ""
                    customPath:
                      - ".*/.*\\.svg"
                    filterDir: ""
                    filterFile: ""
                    scanTestSource: false
                    BK_CI_REPO_WEB_HOOK_HASHID: ""
                    BK_CI_REPO_GIT_WEBHOOK_SOURCE_BRANCH: ""
                    BK_CI_REPO_GIT_WEBHOOK_TARGET_BRANCH: ""
              condition: null
          resourceType: "REMOTE"
